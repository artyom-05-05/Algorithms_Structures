#include <iostream>
#include <vector>
using namespace std;

int main() {
//Ввод кол-ва цветков n
    int n;
    cin >> n;
//Ввод массива видов a[i]
    vector <int> a(n);
    for (int i = 0; i < n; i++) {
        cin >> a[i];
    }
//Обработка
    int ind_max1 = 0, ind_max2; // ind_max1 - номер 1-го цветка на искомом МАХ уч-ке, ind_max2 - номер последнего
    int max_len = 0;            // длина МАХ уч-ка

    //Случай, когда на грядке меньше 3 цветов
    if (n < 3) {
        ind_max2 = n-1;
    }
    else {
        //___________________________________________________________________
        //Основной алгоритм:
        //ПРОВЕРКА: 3 одинаковых цветка подряд ?
        //         (да) ПРОВЕРКА: На прошлом шаге было 3 подряд ?
        //                       (да) перейти к след.итерации
        //                       (нет) текущ.счётчик + 2; сравнить с MAX (запомнить длину и номера); обнулить текущ.счётчик
        //         (нет) ПРОВЕРКА: последняя тройка ?
        //                                    (нет) текущ.счетчик + 1
        //                                    (да)  текущ.счетчик + 3; сравнить с МАХ (запомнить длину и номера)
        //--------------------------------------------------------------------
        int ind1 = 0;                   //номер 1-го цветка на текущем уч-ке (пока не MAX)
        int cur_len = 0;                //длина текущего уч-ка
        bool three_in_a_row = false;    //флаг "три в ряд"

        for (int i = 0; i < n-2; i++) {
            if (a[i] == a[i+1] && a[i] == a[i+2]) {
                if (three_in_a_row) {
                    continue;
                }
                three_in_a_row = true;
                cur_len += 2;
                if (cur_len > max_len) {
                    max_len = cur_len;
                    ind_max1 = ind1;
                    ind_max2 = i+1;
                }
                cur_len = 0;
            }
                // Если 3 разных цветка
            else {
                three_in_a_row = false;
                if (cur_len == 0) {    //фиксируем индекс 1-го цветка на текущем уч-ке
                    ind1 = i;
                }
                if (i != n-3) {        //если не последняя тройка
                    cur_len++;
                }
                else {
                    cur_len += 3;
                    if (cur_len > max_len) {
                        max_len = cur_len;
                        ind_max1 = ind1;
                        ind_max2 = n-1;
                    }
                }
            }
        }
    }
//вывод 1-го и последнего номера на искомом МАХ уч-ке (+1, так как считаем не с 0, а с 1)
    cout << ind_max1 + 1  << " " << ind_max2 + 1;

    return 0;
}